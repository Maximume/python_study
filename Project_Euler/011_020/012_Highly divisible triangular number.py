# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# Let us list the factors of the first seven triangle numbers:
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
# What is the value of the first triangle number to have over five hundred divisors?

# 1. make triangle number list first. It's sum of range(1, n+1)

# tnList = []
# for n in range(1,100+1):
#     tri_sum = 0
#     for m in range(1, n+1):
#         tri_sum += m
#     tnList.append(tri_sum)

# print(tnList)

# 2. find divisors for each arguments in tnList
# 3. How to find all divisors of a certain number?
# 4. Let's try with 2775

# div_list = []
# for i in range(1, 2775 +1):
#     if 2775 % i == 0:
#         div_list.append(i)
# print(div_list)
# print(len(div_list))

# 5. now I can find triangle number and number of divisors for each triangle number
# 6. make a program which run with infinite loop, till find a triangle number that has over 500 divisors

# n = 1
# while True:
#     triangleNum = 0
#     for i in range(1, n+1):
#         triangleNum += i

#     print('checking ', triangleNum)

#     div_list = []
#     for i in range(1, triangleNum +1):
#         if triangleNum % i == 0:
#             div_list.append(i)
    
#     print('checked', triangleNum, '  ',len(div_list))

#     if len(div_list) >= 500:
#         print(triangleNum)
#         break

#     n += 1

# 7. above method which find divisors by checking every numbers take time too much (over 30min)
# 8. change method using factorization

def factorize(x:int)->list:
    factorized_list=[]
    d = 2
    while d <= x:
        if x % d == 0:
            factorized_list.append(d)
            x = x / d
        else:
            d += 1
    return factorized_list

n = 1
while True:
    triangleNum = 0
    for i in range(1, n+1):
        triangleNum += i

    # print('checking ', triangleNum)

    fact_list = factorize(triangleNum)
    fact_set = set(fact_list)

    divisors = 1
    for i in fact_set:
        num_i = fact_list.count(i) + 1
        divisors *= num_i
    
    # print('checked', triangleNum, '  ',divisors)

    if divisors >= 500:
        print(triangleNum) #76576500
        break

    n += 1

# 9. surprisingly, this method only takes about 10sec.